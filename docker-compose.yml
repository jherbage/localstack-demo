networks:
  localstack:
    attachable: true
    name: localstack
services:
  prep:
    image: alpine:latest
    container_name: prep_demo
    working_dir: /workspace
    command: ["/bin/sh", "-c", "apk add --no-cache zip go &&
      rm -rf .zips &&
      mkdir .zips && 
      mkdir .zips/lambda-function &&
      cd app-code &&
      GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -o bootstrap -tags lambda.norpc lambda.go &&
      cd ../.zips &&
      mv ../app-code/bootstrap lambda-function/. &&
      zip -j lambda.zip lambda-function/*"]
    volumes:
      - './:/workspace'
  localstack:
    #image: gresau/localstack-persist:latest # supports persistence
    image: localstack/localstack:latest 
    container_name: localstack_demo
    networks:
      - localstack
    ports:
      - '4510-4599:4510-4599'
    environment:
      - SERVICES=s3:4566,lambda:4566,iam:4566,apigateway:4566
      - DEFAULT_REGION=us-east-1
      - DEBUG=1
      - HOSTNAME_EXTERNAL=localstack
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - './.localstack:/var/lib/localstack'
      # - './.localstack-data:/persisted-data' # supports persistence
    depends_on:
      - prep
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 30s
      timeout: 10s
      retries: 3
  terraform:
    image: hashicorp/terraform:latest
    container_name: terraform_demo
    networks:
      - localstack
    depends_on:
      localstack:
        condition: service_healthy
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ENDPOINT_URL=http://localstack:4566
    volumes:
      - './.terraform:/workspace'
      - './.zips:/workspace/zips'
    working_dir: /workspace
    entrypoint: ["/bin/sh", "-c", "terraform init && terraform apply -auto-approve"]